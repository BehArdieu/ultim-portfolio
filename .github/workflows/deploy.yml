name: 🚀 Deploy Todo App

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/todo-app/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/todo-app/**'

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: 🧪 Tests et qualité
    runs-on: ubuntu-latest
    
    steps:
    - name: ✅ Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'frontend/todo-app/package-lock.json'
        
    - name: 📦 Install dependencies
      working-directory: ./frontend/todo-app
      run: npm ci
      
    - name: 🔍 Lint code
      working-directory: ./frontend/todo-app
      run: npm run test -- --coverage --ci --watchAll=false
      
    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./frontend/todo-app/coverage/lcov.info
        flags: unittests
        name: todo-app-coverage
        
  build:
    name: 🏗️ Build application
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: ✅ Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'frontend/todo-app/package-lock.json'
        
    - name: 📦 Install dependencies
      working-directory: ./frontend/todo-app
      run: npm ci
      
    - name: 🏗️ Build application
      working-directory: ./frontend/todo-app
      run: npm run build
      env:
        CI: false # Éviter que les warnings soient traités comme des erreurs
        
    - name: 📁 Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-files
        path: frontend/todo-app/build/
        retention-days: 7
        
  docker:
    name: 🐳 Build Docker image
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: ✅ Checkout code
      uses: actions/checkout@v4
      
    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: 🔐 Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: 🏗️ Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend/todo-app
        file: ./frontend/todo-app/Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/todo-app:latest
          ${{ secrets.DOCKER_USERNAME }}/todo-app:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
  deploy-netlify:
    name: 🌐 Deploy to Netlify
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: ✅ Checkout code
      uses: actions/checkout@v4
      
    - name: 📁 Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-files
        path: frontend/todo-app/build/
        
    - name: 🚀 Deploy to Netlify
      uses: nwtgck/actions-netlify@v2
      with:
        publish-dir: './frontend/todo-app/build'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
        enable-pull-request-comment: false
        enable-commit-comment: true
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        
  deploy-railway:
    name: 🚂 Deploy to Railway
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: ✅ Checkout code
      uses: actions/checkout@v4
      
    - name: 🚂 Deploy to Railway
      uses: railwayapp/railway-deploy@v3
      with:
        railway-token: ${{ secrets.RAILWAY_TOKEN }}
        service: 'todo-app'
        
  notify:
    name: 📢 Notification
    runs-on: ubuntu-latest
    needs: [deploy-netlify, deploy-railway]
    if: always()
    
    steps:
    - name: 📢 Notify deployment status
      if: success()
      run: |
        echo "✅ Déploiement réussi!"
        echo "🌐 Netlify: Déployé"
        echo "🚂 Railway: Déployé"
        
    - name: ❌ Notify deployment failure
      if: failure()
      run: |
        echo "❌ Échec du déploiement"
        echo "Vérifiez les logs des jobs précédents"